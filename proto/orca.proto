syntax = "proto3";
package orca;
option go_package = "ProjectOrca/proto/orca";

import "google/protobuf/duration.proto";

service Orca {
  rpc Register (RegisterRequest) returns (RegisterReply) {}
  rpc Play (PlayRequest) returns (PlayReply) {}
  rpc Skip (SkipRequest) returns (SkipReply) {}
  rpc Stop (StopRequest) returns (StopReply) {}
  rpc Seek (SeekRequest) returns (SeekReply) {}
  rpc GetTracks (GetTracksRequest) returns (GetTracksReply) {}
  rpc Pause (PauseRequest) returns (PauseReply) {}
  rpc Resume (ResumeRequest) returns (ResumeReply) {}
}

message RegisterRequest {
  string token = 1;
}

message RegisterReply {
  string token = 1;
}

message PlayRequest {
  string guildID = 1;
  string channelID = 2;
  string url = 3;
  int64 position = 4;
}

message PlayReply {
  TrackData track = 1;
}

message TrackData {
  string title = 1;
  string originalURL = 2;
  string url = 3;
  bool live = 4;
  google.protobuf.Duration position = 5;
  google.protobuf.Duration duration = 6;
}

message SkipRequest {
  string guildID = 1;
}

message SkipReply {}

message StopRequest {
  string guildID = 1;
}

message StopReply {}

message SeekRequest {
  string guildID = 1;
  google.protobuf.Duration position = 2;
}

message SeekReply {}

message GetTracksRequest {
  string guildID = 1;
  int64 start = 2;
  int64 end = 3;
}

message GetTracksReply {
  repeated TrackData tracks = 1;
  int64 totalTracks = 2;
}

message PauseRequest {
  string guildID = 1;
}

message PauseReply {}

message ResumeRequest {
  string guildID = 1;
}

message ResumeReply {}
