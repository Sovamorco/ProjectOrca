syntax = "proto3";
package orca;
option go_package = "ProjectOrca/proto/orca";

import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";

service Orca {
  rpc Join(JoinRequest) returns (google.protobuf.Empty) {}
  rpc Leave(GuildOnlyRequest) returns (google.protobuf.Empty) {}
  rpc Play(PlayRequest) returns (PlayReply) {}
  rpc Skip(GuildOnlyRequest) returns (google.protobuf.Empty) {}
  rpc Stop(GuildOnlyRequest) returns (google.protobuf.Empty) {}
  rpc Seek(SeekRequest) returns (SeekReply) {}
  rpc GetCurrent(GuildOnlyRequest) returns (GetCurrentReply) {}
  rpc GetTracks(GetTracksRequest) returns (GetTracksReply) {}
  rpc Pause(GuildOnlyRequest) returns (google.protobuf.Empty) {}
  rpc Resume(GuildOnlyRequest) returns (google.protobuf.Empty) {}
  rpc Loop(GuildOnlyRequest) returns (google.protobuf.Empty) {}
  rpc ShuffleQueue(GuildOnlyRequest) returns (google.protobuf.Empty) {}
  rpc Remove(RemoveRequest) returns (google.protobuf.Empty) {}
  rpc SavePlaylist(SavePlaylistRequest) returns (google.protobuf.Empty) {}
  rpc LoadPlaylist(LoadPlaylistRequest) returns (PlayReply) {}
  rpc ListPlaylists(ListPlaylistsRequest) returns (ListPlaylistsReply) {}
  rpc Health(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc Subscribe(google.protobuf.Empty)
      returns (stream QueueChangeNotification) {} // bot-level subscription
}

message JoinRequest {
  string guildID = 1;
  string channelID = 2;
}

message PlayRequest {
  string guildID = 1;
  string channelID = 2;
  string url = 3;
  int64 position = 4;
}

message PlayReply {
  repeated TrackData tracks = 1;
  int64 total = 2;
}

message TrackData {
  string title = 1;
  string displayURL = 2;
  bool live = 3;
  google.protobuf.Duration position = 4;
  google.protobuf.Duration duration = 5;
}

message GuildOnlyRequest { string guildID = 1; }

message SeekRequest {
  string guildID = 1;
  google.protobuf.Duration position = 2;
}

message SeekReply {}

message GetTracksRequest {
  string guildID = 1;
  int64 start = 2;
  int64 end = 3;
}

message GetTracksReply {
  repeated TrackData tracks = 1;
  int64 totalTracks = 2;
  bool looping = 3;
  bool paused = 4;
  google.protobuf.Duration remaining = 5;
}

message GetCurrentReply {
  TrackData track = 1;
  bool looping = 2;
  bool paused = 3;
}

message RemoveRequest {
  string guildID = 1;
  int64 position = 2;
}

message SavePlaylistRequest {
  string guildID = 1;
  string userID = 2;
  string name = 3;
}

message LoadPlaylistRequest {
  string guildID = 1;
  string playlistID = 2;
  string channelID = 3;
}

message ListPlaylistsRequest {
  string guildID = 1;
  string userID = 2;
}

message ListPlaylistsReply { repeated Playlist playlists = 1; }

message Playlist {
  string id = 1;
  string name = 2;
  int64 totalTracks = 3;
  google.protobuf.Duration totalDuration = 4;
}

message QueueChangeNotification {
  string bot = 1;
  string guild = 2;
}
